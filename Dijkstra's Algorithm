#include <stdio.h>
#include <limits.h>

#define N 5

int minDistance(int dist[], bool sptSet[]) {
   int min = INT_MAX, min_index;

   for (int v = 0; v < N; v++)
       if (!sptSet[v] && dist[v] <= min)
           min = dist[v], min_index = v;

   return min_index;
}

void dijkstra(int graph[N][N]) {
   int dist[N];
   bool sptSet[N];

   for (int i = 0; i < N; i++) 
       dist[i] = INT_MAX , sptSet[i] = false;

   dist[0] = 0;

   for (int count = 0; count < N - 1; count++) {
       int u = minDistance(dist , sptSet);
       sptSet[u] = true;

       for (int v = 0; v < N; v++)
           if (!sptSet[v] && graph[u][v] && dist[u] != INT_MAX &&
               dist[u] + graph[u][v] < dist[v])
               dist[v] = dist[u] + graph[u][v];
   }

   printf("Vertex Distance from Source\n");
   for (int i = 0; i < N; i++)
       printf("%d \t\t %d\n", i , dist[i]);
}
